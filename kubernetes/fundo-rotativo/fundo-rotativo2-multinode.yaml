# Arquivo: fundo-rotativo2-multinode.yaml
# Deployment configurado para rodar em qualquer node (após sincronização)

# --- Deployment para a Aplicação (fundo-rotativo2) Multi-Node ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fundo-rotativo2-deployment
  labels:
    app: fundo-rotativo2
    version: multinode
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fundo-rotativo2
  template:
    metadata:
      labels:
        app: fundo-rotativo2
        version: multinode
    spec:
      # --- ESTRATÉGIA DE POSICIONAMENTO ---
      # Remove nodeSelector para permitir execução em qualquer node
      # Kubernetes escolherá automaticamente o melhor node disponível
      
      # Opcional: Adicionar tolerations se houver taints nos nodes
      # tolerations:
      # - key: "node-role.kubernetes.io/worker"
      #   operator: "Exists"
      #   effect: "NoSchedule"
      
      # Opcional: Adicionar nodeAffinity para preferências (não obrigatório)
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values: ["vps54480", "vps60583"]
      
      # --- SEÇÃO DE VOLUMES ---
      volumes:
        # Volume para o código da aplicação (hostPath sincronizado)
        - name: app-code
          hostPath:
            path: /home/saas/fundo-rotativo2/app
            type: Directory
        # Volume para a config do Nginx (ConfigMap)
        - name: nginx-config-volume
          configMap:
            name: fundo-rotativo2-nginx-config
            defaultMode: 0644
      
      # --- CONTAINERS ---
      containers:
      - name: nginx
        image: nginx:1.25-alpine
        ports:
        - containerPort: 80
          name: http
        # --- HEALTH CHECKS ---
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 2
        # --- RESOURCES ---
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        # --- VOLUME MOUNTS ---
        volumeMounts:
        - name: app-code
          mountPath: /var/www/html
          readOnly: true
        - name: nginx-config-volume
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
          readOnly: true
      
      - name: php
        image: jpcaballeria/php-build:latest
        # --- HEALTH CHECKS ---
        livenessProbe:
          exec:
            command:
            - php-fpm-healthcheck
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - php-fpm-healthcheck
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 2
        # --- RESOURCES ---
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        # --- VOLUME MOUNTS ---
        volumeMounts:
        - name: app-code
          mountPath: /var/www/html
          readOnly: false  # PHP precisa escrever em uploads, logs, etc.
        # --- ENVIRONMENT VARIABLES ---
        env:
        - name: PHP_MEMORY_LIMIT
          value: "256M"
        - name: PHP_MAX_EXECUTION_TIME
          value: "300"

---
# --- Serviço para a Aplicação (fundo-rotativo2) ---
apiVersion: v1
kind: Service
metadata:
  name: fundo-rotativo2-service
  labels:
    app: fundo-rotativo2
spec:
  type: NodePort
  selector:
    app: fundo-rotativo2
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      name: http

---
# --- HorizontalPodAutoscaler (Opcional) ---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: fundo-rotativo2-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: fundo-rotativo2-deployment
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80