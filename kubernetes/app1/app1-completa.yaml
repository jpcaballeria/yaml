# --- 1. Segredos para o Banco de Dados da App1 ---
apiVersion: v1
kind: Secret
metadata:
  name: app1-mysql-secrets
type: Opaque
stringData:
  MYSQL_ROOT_PASSWORD: "C4b4lleri42024@"
  MYSQL_DATABASE: "saas_app1"
  MYSQL_USER: "app1"
  MYSQL_PASSWORD: "C4b4lleri42024@"

---
# --- 2. Volume Persistente para o Banco de Dados da App1 ---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: app1-mysql-pv
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data/mysql-app1"

---
# --- 3. Solicitação de Volume Persistente da App1 ---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: app1-mysql-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
# --- 4. Deployment para o MySQL da App1 ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app1-mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app1-mysql
  template:
    metadata:
      labels:
        app: app1-mysql
    spec:
      # ✅ ADICIONADO: Força o pod a rodar no nó vps54480
      nodeSelector:
        kubernetes.io/hostname: vps54480
      containers:
      - name: mysql
        image: mysql:8.0
        envFrom:
        - secretRef:
            name: app1-mysql-secrets
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: app1-mysql-pvc

---
# --- 5. Serviço para o MySQL da App1 ---
apiVersion: v1
kind: Service
metadata:
  name: app1-mysql-service
spec:
  selector:
    app: app1-mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306

---
# --- 6. Deployment para a Aplicação App1 (Nginx + PHP) ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app1-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app1
  template:
    metadata:
      labels:
        app: app1
    spec:
      # ✅ ADICIONADO: Força o pod a rodar no nó vps54480
      nodeSelector:
        kubernetes.io/hostname: vps54480
      volumes:
        - name: app-code
          hostPath:
            path: /home/saas/app1/app
        - name: nginx-config
          hostPath:
            path: /home/saas/app1/nginx.conf
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - name: app-code
          mountPath: /var/www/html
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          readOnly: true
      - name: php
        image: jpcaballeria/php-build:latest
        volumeMounts:
        - name: app-code
          mountPath: /var/www/html

---
# --- 7. Serviço para a Aplicação App1 ---
apiVersion: v1
kind: Service
metadata:
  name: app1-service
spec:
  type: NodePort
  selector:
    app: app1
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80